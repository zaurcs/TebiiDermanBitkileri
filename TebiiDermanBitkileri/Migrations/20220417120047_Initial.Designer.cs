// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TebiiDermanBitkileri.DB;

namespace TebiiDermanBitkileri.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220417120047_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Bitki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BitkiNovuId")
                        .HasColumnType("int");

                    b.Property<string>("Sekil")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BitkiNovuId");

                    b.ToTable("Bitkiler");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.BitkiNovu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BitkiNovleri");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Helpers.BitkiVitamin", b =>
                {
                    b.Property<int>("BitkiId")
                        .HasColumnType("int");

                    b.Property<int>("VitaminId")
                        .HasColumnType("int");

                    b.HasKey("BitkiId", "VitaminId");

                    b.HasIndex("VitaminId");

                    b.ToTable("BitkiVitamin");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Helpers.BitkiXestelik", b =>
                {
                    b.Property<int>("BitkiId")
                        .HasColumnType("int");

                    b.Property<int>("XestelikId")
                        .HasColumnType("int");

                    b.HasKey("BitkiId", "XestelikId");

                    b.HasIndex("XestelikId");

                    b.ToTable("BitkiXestelik");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Helpers.XestelikSimptom", b =>
                {
                    b.Property<int>("XestelikId")
                        .HasColumnType("int");

                    b.Property<int>("SimptomId")
                        .HasColumnType("int");

                    b.HasKey("XestelikId", "SimptomId");

                    b.HasIndex("SimptomId");

                    b.ToTable("XestelikSimptom");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Simptom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Simptomlar");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Vitamin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vitaminler");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Xestelik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Xestelikler");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Bitki", b =>
                {
                    b.HasOne("TebiiDermanBitkileri.Entity.BitkiNovu", "BitkiNovu")
                        .WithMany("Bitkiler")
                        .HasForeignKey("BitkiNovuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BitkiNovu");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Helpers.BitkiVitamin", b =>
                {
                    b.HasOne("TebiiDermanBitkileri.Entity.Bitki", "Bitki")
                        .WithMany("BitkiVitamin")
                        .HasForeignKey("BitkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TebiiDermanBitkileri.Entity.Vitamin", "Vitamin")
                        .WithMany("BitkiVitamin")
                        .HasForeignKey("VitaminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bitki");

                    b.Navigation("Vitamin");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Helpers.BitkiXestelik", b =>
                {
                    b.HasOne("TebiiDermanBitkileri.Entity.Bitki", "Bitki")
                        .WithMany("BitkiXestelik")
                        .HasForeignKey("BitkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TebiiDermanBitkileri.Entity.Xestelik", "Xestelik")
                        .WithMany("BitkiXestelik")
                        .HasForeignKey("XestelikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bitki");

                    b.Navigation("Xestelik");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Helpers.XestelikSimptom", b =>
                {
                    b.HasOne("TebiiDermanBitkileri.Entity.Simptom", "Simptom")
                        .WithMany("XestelikSimptom")
                        .HasForeignKey("SimptomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TebiiDermanBitkileri.Entity.Xestelik", "Xestelik")
                        .WithMany("XestelikSimptom")
                        .HasForeignKey("XestelikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Simptom");

                    b.Navigation("Xestelik");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Bitki", b =>
                {
                    b.Navigation("BitkiVitamin");

                    b.Navigation("BitkiXestelik");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.BitkiNovu", b =>
                {
                    b.Navigation("Bitkiler");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Simptom", b =>
                {
                    b.Navigation("XestelikSimptom");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Vitamin", b =>
                {
                    b.Navigation("BitkiVitamin");
                });

            modelBuilder.Entity("TebiiDermanBitkileri.Entity.Xestelik", b =>
                {
                    b.Navigation("BitkiXestelik");

                    b.Navigation("XestelikSimptom");
                });
#pragma warning restore 612, 618
        }
    }
}
